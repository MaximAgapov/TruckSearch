<Project Sdk="Microsoft.NET.Sdk.Web">

<!--    <PropertyGroup>-->
<!--        <SpaRoot>ClientApp\</SpaRoot>-->
<!--        <SpaProxyServerUrl>https://localhost:44447</SpaProxyServerUrl>-->
<!--        <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>-->
<!--        <RootNamespace>FoodTruckSearch.Web</RootNamespace>-->
<!--        <AssemblyName>FoodTruckSearch.Web</AssemblyName>-->
<!--    </PropertyGroup>-->

    <ItemGroup>
        <ProjectReference Include="..\Application\Application.csproj"/>
        <ProjectReference Include="..\Infrastructure\Infrastructure.csproj"/>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Azure.Extensions.AspNetCore.Configuration.Secrets"/>
        <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore"/>
<!--        <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore"/>-->
        <PackageReference Include="Microsoft.AspNetCore.OpenApi"/>
<!--        <PackageReference Include="Microsoft.AspNetCore.Identity.UI"/>-->
<!--        <PackageReference Include="Microsoft.AspNetCore.SpaProxy">-->
<!--            &lt;!&ndash; The SPA Proxy is only used at development time &ndash;&gt;-->
<!--            <Publish>false</Publish>-->
<!--        </PackageReference>-->
        <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks.EntityFrameworkCore"/>
        <PackageReference Include="NSwag.AspNetCore"/>
        <PackageReference Include="NSwag.MSBuild">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="FluentValidation.AspNetCore"/>
    </ItemGroup>

    <Target Name="NSwag" AfterTargets="PostBuildEvent" Condition=" '$(Configuration)' == 'Debug' And '$(SkipNSwag)' != 'True' ">
        <Exec ConsoleToMSBuild="true" ContinueOnError="true" WorkingDirectory="$(ProjectDir)" EnvironmentVariables="ASPNETCORE_ENVIRONMENT=Development" Command="$(NSwagExe_Net80) run config.nswag /variables:Configuration=$(Configuration)">
            <Output TaskParameter="ExitCode" PropertyName="NSwagExitCode"/>
            <Output TaskParameter="ConsoleOutput" PropertyName="NSwagOutput"/>
        </Exec>

        <Message Text="$(NSwagOutput)" Condition="'$(NSwagExitCode)' == '0'" Importance="low"/>
        <Error Text="$(NSwagOutput)" Condition="'$(NSwagExitCode)' != '0'"/>
    </Target>
</Project>
